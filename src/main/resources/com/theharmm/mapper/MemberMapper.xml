<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.theharmm.mapper.MemberMapper">

	<!-- 재사용을 위한 VO들 미리 담아놓기 -->
	<!-- property : VO의 담을 변수값, column : DB에서 가져와서 넣을 값 -->
	<resultMap type="com.theharmm.domain.MemberVO" id="memberMap">
		<id property="member_email" column="member_email" />
		<result property="member_email" column="member_email" />
		<result property="member_password" column="member_password" />
		<result property="member_name" column="member_name" />
		<result property="member_phone" column="member_phone" />
		<result property="member_shoes_size" column="member_shoes_size" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<resultMap type="com.theharmm.domain.AuthVO" id="authMap">
		<result property="username" column="member_email" />
		<result property="authority" column="authority" />
	</resultMap>

	<!-- 회원가입 -->
	<insert id="joinMember">
		INSERT INTO member (member_email, member_password, member_name, member_nickname, member_phone, member_shoes_size,
		member_register, member_login, member_messege_info, member_email_info, member_grade)
		VALUES (#{member_email}, #{member_password}, #{member_name}, #{member_nickname}, #{member_phone}, #{member_shoes_size}, #{member_register}, 
		#{member_login}, #{member_messege_info}, #{member_email_info}, 'BRONZE')
	</insert>

	<!-- 권한 정보도 넣기 -->
	<insert id="joinMemberAuthority">
		INSERT INTO authorities
		(username, authority)
		VALUES (#{username}, #{authority})
	</insert>
	
	<!-- 이메일 중복 여부 -->
	<select id="checkEmail" resultType="int">
		select count(*) from member where member_email = #{member_email}
	</select>
	
	<!-- 닉네임 중복 여부 -->
	<select id="checkNickName" resultType="int">
		select count(*) from member where MEMBER_NICKNAME = #{member_nickname}
	</select>

	<!-- 로그인 -->
	<select id="login" resultType="com.theharmm.domain.MemberVO">
		select * from member
		where
		MEMBER_EMAIL=#{member_email} and MEMBER_PASSWORD = #{member_password}
	</select>

	<!-- 권한을 포함한 모든 회원의 정보를 가져오기 -->
	<select id="read" resultMap="memberMap">
		SELECT member_email, member_password, member_name, member_phone, member_shoes_size, authority
		FROM member mem
		LEFT OUTER JOIN AUTHORITIES auth
		on mem.member_email = auth.username
		WHERE mem.member_email = #{member_email}
	</select>
</mapper>
